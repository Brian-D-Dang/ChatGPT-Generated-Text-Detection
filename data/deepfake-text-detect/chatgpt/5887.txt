First off, this is an exciting new subreddit for me and I love the idea. However, I can't seem to shake feeling that many of the posts here stem from the same problem and I'd like to propose a solution to that problem. I'll begin with a hypothetical situation: Imagine a scenario where a user has written a program to automatically provide a random collection of ideas for other users to pick from, but those ideas are not already implemented. This user creates a repo with an API that allows users to generate random ideas by providing a set of seed words, and then a developer of another project decides that they want to use the ideas provided by this user for their own project. The developer wishes to use the API to populate a GUI with the random ideas, but it is not feasible for them to do so themselves, so they ask the original user for their code. The user provides the code, which has been written in a language that the developer is unfamiliar with. The user then proceeds to provide several pages of comments explaining how to use the API to populate the GUI. The developer then takes this code and runs it, and it works perfectly. Now, let's imagine that this developer has a separate project that is also written in this language. They have a team of contributors who are all familiar with the language and the API. The team decides that they want to use the same API as the other project to populate a GUI, and they ask for the original code. The original developer provides the code, which, as before, is accompanied by several pages of comments explaining how to use the API. Now, let's imagine that the team also has a separate project that is written in this language, and they have a team of contributors who are all familiar with the language and the API. The team decides that they want to use the same API as the other two projects to populate a GUI, and they ask for the original code. The original developer provides the code, which, as before, is accompanied by several pages of comments explaining how to use the API. You can see the potential problem here. The same code base is being used for two different projects, but the user who originally wrote it doesn't have the time to keep up with the three different projects that have been built using their code. They are essentially forced to provide this same code to multiple projects. Now, the original developer has a GitHub repo to which they can post comments, but there is no guarantee that the teams of contributors to the different projects will see those comments and use them to make the appropriate changes to their own project. In fact, it is quite likely that they will not see the comments, and will instead be forced to ask the original developer for help, which could have been avoided with proper comments to the code. The simple solution to this problem is to provide a package manager for your language of choice, where the packages are created by other developers who have experience with your language. This package manager would have two functions: It would contain all of the packages that you might ever need for your project, and it would be curated by people who have experience with the language, so you can be sure that you are getting good packages. It would provide detailed instructions on how to use each package, so that if you needed to use a package in your project, you would not have to search for the code on GitHub to understand how to use it. Ideally, a package manager would be an open source project that was developed by the community, and would be maintained by volunteers. It would be easy to add packages to, and it would have a clear documentation on how to add new packages. To illustrate the concept with a real world example, I'll use Haskell, but I'm sure that this would work for other languages as well. Haskell, like many other languages, does not have a package manager. To obtain a package, you have to go to GitHub, search for the name of the package, and download the code. This process is not very intuitive. If you want to use a package in your project, you have to write a lot of code to install it. This is a pain, and it is not always obvious. What if there was a package manager that did this for you? I've seen people put in a lot of effort to create a package manager for Haskell, but it has never been completed. This is a shame, and it would make Haskell projects a lot easier to create, which would lead to more Haskell projects being created. I think that there is a lot of value in the idea of a package manager. It would make it a lot easier to use existing code in projects, which is the whole point of using other people's code. When you have to write a lot of code to figure out how to use someone else's code