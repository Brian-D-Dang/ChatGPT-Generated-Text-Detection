To pull an example of a single thread forum off the web: [here] . The only situation where single threads might be good is where a fixed group is involved, but you don't want to be lazy and implement all that and so generally there's no need for it. If you have some kind of general purpose application then single threaded would be a good fit; otherwise, I'd still rather use a multi-threaded solution unless the working pattern doesn't lend itself well to a single threaded solution (in which case I'd go with multithreaded). I'm curious about how it differs from other languages because most of my usage is not in a game or development environment like Rust has - though Javascript for instance does handle shared memory well enough. Is this more similar to Haskell than JavaScript? It relies on having immutable data structures as opposed to references. It also uses a mutable type system used by things like Microsoft's C11 std::vector and the C standard library. C11 makes it possible to work with vectors without setting up a new object every time your vector changes. There are a couple of libraries that do this already, one being ocamlvec, but OCaml just provides a better way to arrange them that makes it easier for beginners to learn. See For any particular question you may have shoot me an email at Also feel free to ask questions here, we're happy to help out! If anyone is interested in the idea of virtual machine, check out (it was started by some people who worked at Facebook) The article covers the different platforms a typical app can run on. Advantages include making mobile apps relatively faster, allowing developers to make native apps instead of using server side frameworks, etc. (some restrictions apply, such as no single point of failure), Disadvantages: requires significant capital investment (iOSAndroidWeb) (you will probably end up supporting these platform either way eventually), App store submission fees, pre-installed adware... This is cool! It looks like a great start! One thing I noticed immediately is how large the 'Note' field becomes when typing something longer than 7 characters. This happened to me while writing this comment and the 'Notepad' text editor window got too small because of the size. Do you plan to address this? Thanks for that feedback! You are right, the note area grows quite big after a certain length. We'll look into changing that value, thanks.:) What's the advantage over, say, vim or emacs? Does it give you any extra functionality like undo? M-x does everything better IMHO since Vim offers a lot of features (including interesting ones related to history) and Emacs shows your keyboard keystrokes by default if they have been entered before.