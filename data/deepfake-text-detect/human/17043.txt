In the Graph Isomorphism (GI) problem two N -vertex graphs G and G ' are given and the task is to determine whether there exists a permutation of the vertices of G that preserves adjacency and transforms - G G '. If yes, then G and G ' are said to be isomorphic; otherwise they are non-isomorphic. The GI problem is an important problem in computer science and is thought to be of comparable difficulty to integer factorization. In this paper we present a quantum algorithm that solves arbitrary instances of GI and which also provides a novel approach to determining all automorphisms of a given graph. We show how the GI problem can be converted to a combinatorial optimization problem that can be solved using adiabatic quantum evolution. We numerically simulate the algorithm's quantum dynamics and show that it correctly: (i) distinguishes non-isomorphic graphs; (ii) recognizes isomorphic graphs and determines the permutation (s) that connect them; and (iii) finds the automorphism group of a given graph G. We then discuss the GI quantum algorithm's experimental implementation, and close by showing how it can be leveraged to give a quantum algorithm that solves arbitrary instances of the NP-Complete Sub-Graph Isomorphism problem. The computational complexity of an adiabatic quantum algorithm is largely determined by the minimum energy gap D (N) separating the ground- and first-excited states in the limit of large problem size N 1. Calculating D (N) in this limit is a fundamental open problem in adiabatic quantum computing, and so it is not possible to determine the computational complexity of adiabatic quantum algorithms in general, nor consequently, of the specific adiabatic quantum algorithms presented here. Adiabatic quantum computing has been shown to be equivalent to the circuit-model of quantum computing, and so development of adiabatic quantum algorithms continues to be of great interest.