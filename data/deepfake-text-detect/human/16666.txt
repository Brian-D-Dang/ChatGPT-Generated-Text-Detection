In the planar range skyline reporting problem, the goal is to store a set P of n 2D points in a structure such that, given a query rectangle Q x [ a 1, a 2 ] [ b 1, b 2 ], the maxima (a.k.a. skyline) of P Q can be reported efficiently. The query is 3-sided if an edge of Q is grounded, giving rise to two variants: top-open (b 2) and left-open (a 1 (symmetrically bottom-open and right-open) queries. This paper presents comprehensive results in external memory under the O (n B) space budget (B is the block size), covering both the static and dynamic settings: 1st item For static P, we give structures that answer top-open queries in O (log B n k B), O (log log B U k B), and O (1 k B) IOs when the universe is R 2, a x U U grid, and a rank space grid [ O (n) ] 2, respectively (where k is the number of reported points). The query complexity is optimal in all cases. 2nd item We show that the left-open case is harder, such that any linear-size structure must incur O n B) k B) IOs to answer a query. In fact, this case turns out to be just as difficult as the general 4-sided queries, for which we provide a static structure with the optimal query cost O n B) k B). 3rd item We present a dynamic structure that supports top-open queries in O (log 2 B (n B) k B - 1) IOs, and updates in O (log 2 B (n B IOs, for any satisfying 0 1. This result also leads to a dynamic structure for 4-sided queries with optimal query cost O n B) k B), and amortized update cost O (log (n B. As a contribution of independent interest, we propose an IO-efficient version of the fundamental structure priority queue with attrition (PQA). Our PQA supports FindMin, DeleteMin, and InsertAndAttrite all in O (1) worst case IOs, and O (1 B) amortized IOs per operation. Furthermore, it allows the additional CatenateAndAttrite operation that merges two PQAs in O (1) worst case and O (1 B) amortized IOs. The last operation is a non-trivial extension to the classic PQA of Sundar, even in internal memory.